# -*- coding: utf-8 -*-
"""lvadsusr146_Chekuri_Pooja_Sree_Cluster.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1jEPAkf_pKYeIeJCdC3iXRH-q52k9SKvX
"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

data=pd.read_csv('https://raw.githubusercontent.com/Deepsphere-AI/LVA-Batch5-Assessment/main/Credit%20Card%20Customer%20Data.csv')
df=pd.DataFrame(data)

df.head()

df.info()

df.describe()

df.columns

"""Handling Duplicate Values"""

df.duplicated().sum()

"""NO duplicate Values"""

df.isnull().sum()

df['Total_visits_online']=df['Total_visits_online'].fillna(df['Total_visits_online'].mean())

df.isnull().sum()

df.nunique()

"""Univariate Analysis"""

for i in df.columns:
  if i!='Sl_No':
   plt.figure(figsize=(10,5))
   plt.hist(df[i])
   plt.title(f'Histogram of {i}')
   plt.show()

"""Handling Outliers"""

for i in df.columns:
  plt.figure(figsize=(10,5))
  plt.boxplot(df[i])
  plt.title(f'Boxplot of {i}')
  plt.show()

for i in df.columns:
  q1=df[i].quantile(0.25)
  q3=df[i].quantile(0.75)
  iqr=q3-q1
  l=q1-1.5*iqr
  u=q3+1.5*iqr
  df[i]=df[i].clip(lower=l,upper=u)
  sns.boxplot(df[i])
  plt.show()

df.columns

"""Bivariate Analysis"""

correlation=df[['Avg_Credit_Limit', 'Total_Credit_Cards','Total_visits_bank', 'Total_visits_online', 'Total_calls_made']].corr()

sns.heatmap(correlation,annot=True)

"""Feature Selection"""

x=df.drop(['Sl_No', 'Customer Key'],axis=1)

from sklearn.metrics import silhouette_score
from sklearn.cluster import KMeans
from sklearn.preprocessing import StandardScaler
import warnings
warnings.filterwarnings('ignore')
scaler=StandardScaler()
x_scaled=scaler.fit_transform(x)

k_ran=range(2,10)
sse=[]
sil=[]
for i in k_ran:
  km=KMeans(n_clusters=i)
  km.fit_predict(x_scaled)
  sse.append(km.inertia_)
  sil.append(silhouette_score(x_scaled,km.labels_))
sns.lineplot(x=k_ran,y=sse,color='blue')
plt.show()
sns.lineplot(x=k_ran,y=sil,color='red')
plt.show()

"""Optimal K value is 3"""

km=KMeans(n_clusters=3)
labels=km.fit_predict(x_scaled)
df['cluster']=labels

print('centroids:')
print(km.cluster_centers_)

df.columns

sns.scatterplot(x='Total_Credit_Cards',y='Total_visits_online',data=df,hue='cluster')
sns.scatterplot(x=km.cluster_centers_[:,0],y=km.cluster_centers_[:,1],marker='*',color='purple')
plt.show()

for i in df.columns:
  sns.boxplot(x='cluster',y=i,data=df)
  plt.show()

"""cluster profiling
group 1 are less number of credit card holders with least credit limit
group 2 are high number of credit card holders with high credit limit
group 3 are medium number of credit card holders with medium credit limit

Bussiness insights

1.   for group 1 we can provide offers and services which cost less
2.   group 2 people can buy high value products can recommend high value offers and services
3. group 3 people can provide offers and services based on their interest since these are mesium level customer group
"""